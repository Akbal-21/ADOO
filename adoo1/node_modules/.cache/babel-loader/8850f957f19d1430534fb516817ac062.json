{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport \"../../styles/Components/TaskScreen.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Equip = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // useEffect(() => {\n  //   loadTasksFromLocalStorage();\n  // }, []);\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks(tasks => [...tasks, {\n      id: newTaskId,\n      title: \"\",\n      description: \"\",\n      urgency: \"\",\n      status: status\n    }]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    setTasks(newTaskList); //saveTasksToLocalStorage(newTaskList);\n  }\n\n  function deleteTask(taskId) {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskId;\n    });\n    setTasks(filteredTasks); //saveTasksToLocalStorage(filteredTasks);\n  }\n\n  function moveTask(id, newStatus) {\n    let task = tasks.filter(task => {\n      return task.id === id;\n    })[0];\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== id;\n    });\n    task.status = newStatus;\n    let newTaskList = [...filteredTasks, task];\n    setTasks(newTaskList); //saveTasksToLocalStorage(newTaskList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEAM Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Programers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Designers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Analist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Boss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusLine, {\n          tasks: tasks,\n          addEmptyTask: addEmptyTask,\n          addTask: addTask,\n          deleteTask: deleteTask,\n          moveTask: moveTask,\n          status: \"Testers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Equip, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = Equip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equip\");","map":{"version":3,"sources":["/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js"],"names":["React","useState","useEffect","StatusLine","Equip","tasks","setTasks","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","description","urgency","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","deleteTask","taskId","moveTask","newStatus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport \"../../styles/Components/TaskScreen.scss\";\n\nexport const Equip = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // useEffect(() => {\n  //   loadTasksFromLocalStorage();\n  // }, []);\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        description: \"\",\n        urgency: \"\",\n        status: status,\n      },\n    ]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n\n    let newTaskList = [...filteredTasks, taskToAdd];\n\n    setTasks(newTaskList);\n\n    //saveTasksToLocalStorage(newTaskList);\n  }\n\n  function deleteTask(taskId) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskId;\n    });\n\n    setTasks(filteredTasks);\n\n    //saveTasksToLocalStorage(filteredTasks);\n  }\n\n  function moveTask(id, newStatus) {\n    let task = tasks.filter((task) => {\n      return task.id === id;\n    })[0];\n\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n\n    task.status = newStatus;\n\n    let newTaskList = [...filteredTasks, task];\n\n    setTasks(newTaskList);\n\n    //saveTasksToLocalStorage(newTaskList);\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>TEAM Management</h1>\n      <main>\n        <section>\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Programers\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Designers\"\n          />\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Analist\"\n          />\n\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Boss\"\n          />\n\n          <StatusLine\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Testers\"\n          />\n        </section>\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}