{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport '../../styles/Components/equip.scss';\nimport Axios from \"axios\";\nimport validator from 'validator';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Equip = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    namep: {\n      nameproy\n    }\n  } = useContext(AuthContext);\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks(tasks => [...tasks, {\n      id: newTaskId,\n      title: \"\",\n      status: status\n    }]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    let prueba = [taskToAdd];\n    console.log(prueba[0].title);\n\n    if (!validator.isEmail(prueba[0].title)) {\n      if (prueba[0].status == 'Programer') {\n        Axios.post(\"http://localhost:9000/equipo/add/\", {\n          Nombre: {\n            nameproy\n          },\n          Cargo: 2,\n          Correo: prueba[0].title\n        }).then(() => {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Your work has been saved',\n            showConfirmButton: false,\n            timer: 1000\n          });\n        }).catch(err => {\n          Swal.fire('Error', 'Usuario existente o datos incorrectos', 'error');\n        });\n      } else {}\n    } else {}\n\n    setTasks(newTaskList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(StatusLine, {\n            tasks: tasks,\n            addEmptyTask: addEmptyTask,\n            addTask: addTask,\n            status: \"Programer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(StatusLine, {\n            tasks: tasks,\n            addEmptyTask: addEmptyTask,\n            addTask: addTask,\n            status: \"Designers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(StatusLine, {\n            tasks: tasks,\n            addEmptyTask: addEmptyTask,\n            addTask: addTask,\n            status: \"Analist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(StatusLine, {\n            tasks: tasks,\n            addEmptyTask: addEmptyTask,\n            addTask: addTask,\n            status: \"Boss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(StatusLine, {\n            tasks: tasks,\n            addEmptyTask: addEmptyTask,\n            addTask: addTask,\n            status: \"Tester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Equip, \"Grr3mH/rDtyHQ3adnbSXK6xqIx8=\");\n\n_c = Equip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equip\");","map":{"version":3,"sources":["/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js"],"names":["useState","StatusLine","Axios","validator","Swal","AuthContext","Equip","tasks","setTasks","namep","nameproy","useContext","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","prueba","console","log","isEmail","post","Nombre","Cargo","Correo","then","fire","position","icon","showConfirmButton","timer","catch","err"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport '../../styles/Components/equip.scss'\nimport Axios from \"axios\";\nimport validator from 'validator'\nimport Swal from 'sweetalert2'\nimport { AuthContext } from \"../Auth/AuthContext\";\n\nexport const Equip = () => {\n  const [tasks, setTasks] = useState([]);\n  \n  const {\n    namep: {nameproy}\n  } = useContext(AuthContext)\n\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        status: status\n      }\n    ]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n\n    let newTaskList = [...filteredTasks, taskToAdd];\n    let prueba = [taskToAdd];\n    console.log(prueba[0].title);\n    if (!validator.isEmail(prueba[0].title)) {\n      if (prueba[0].status == 'Programer') {\n        Axios.post(\"http://localhost:9000/equipo/add/\", {\n          Nombre: {nameproy},\n          Cargo: 2,\n          Correo: prueba[0].title\n\n        })\n          .then(() => {\n            Swal.fire({\n              position: 'top-end',\n              icon: 'success',\n              title: 'Your work has been saved',\n              showConfirmButton: false,\n              timer: 1000\n            })\n          })\n          .catch(err => {\n            Swal.fire('Error', 'Usuario existente o datos incorrectos', 'error')\n          })\n      } else {\n\n      }\n    } else {\n\n    }\n    setTasks(newTaskList);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Task Management</h1>\n      <div className=\"mb-5\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <StatusLine\n              tasks={tasks}\n              addEmptyTask={addEmptyTask}\n              addTask={addTask}\n              status=\"Programer\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <StatusLine\n              tasks={tasks}\n              addEmptyTask={addEmptyTask}\n              addTask={addTask}\n              status=\"Designers\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <StatusLine\n              tasks={tasks}\n              addEmptyTask={addEmptyTask}\n              addTask={addTask}\n              status=\"Analist\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <StatusLine\n              tasks={tasks}\n              addEmptyTask={addEmptyTask}\n              addTask={addTask}\n              status=\"Boss\"\n            />\n          </div>\n          <div className=\"col-4\">\n\n          </div>\n          <div className=\"col-4\">\n            <StatusLine\n              tasks={tasks}\n              addEmptyTask={addEmptyTask}\n              addTask={addTask}\n              status=\"Tester\"\n            />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}