{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport '../../styles/Components/equip.scss';\nimport Axios from \"axios\";\nimport validator from 'validator';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport { Card, FormControl, InputGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Equip = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    user: {\n      nameproy\n    },\n    dispatch\n  } = useContext(AuthContext); //const nom = {nameproy}\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks(tasks => [...tasks, {\n      id: newTaskId,\n      title: \"\",\n      status: status\n    }]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter(task => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    let prueba = [taskToAdd];\n    console.log(prueba[0].title);\n\n    if (prueba[0].status == 'Programer') {\n      console.log('Axios');\n      Axios.post(\"http://localhost:9000/equipo/add/\", {\n        Correo: prueba[0].title,\n        Nombre: {\n          nameproy\n        },\n        Cargo: 2\n      }).then(() => {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Your work has been saved',\n          showConfirmButton: false,\n          timer: 1000\n        });\n      }).catch(err => {\n        Swal.fire('Error', 'Usuario existente o datos incorrectos', 'error');\n      });\n    } else {}\n\n    setTasks(newTaskList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      className: \"p-5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Task Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(StatusLine, {\n                    tasks: tasks,\n                    addEmptyTask: addEmptyTask,\n                    addTask: addTask,\n                    status: \"Programer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(StatusLine, {\n                    tasks: tasks,\n                    addEmptyTask: addEmptyTask,\n                    addTask: addTask,\n                    status: \"Designers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(StatusLine, {\n                    tasks: tasks,\n                    addEmptyTask: addEmptyTask,\n                    addTask: addTask,\n                    status: \"Analist\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(StatusLine, {\n                    tasks: tasks,\n                    addEmptyTask: addEmptyTask,\n                    addTask: addTask,\n                    status: \"Boss\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(StatusLine, {\n                    tasks: tasks,\n                    addEmptyTask: addEmptyTask,\n                    addTask: addTask,\n                    status: \"Tester\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Equip, \"yWseCZU/krw+FDv25yurTPDlvjc=\");\n\n_c = Equip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equip\");","map":{"version":3,"sources":["/home/fernando/Escritorio/adoo1/src/Components/Screen/Equip.js"],"names":["useState","useContext","StatusLine","Axios","validator","Swal","AuthContext","Card","FormControl","InputGroup","Equip","tasks","setTasks","user","nameproy","dispatch","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","prueba","console","log","post","Correo","Nombre","Cargo","then","fire","position","icon","showConfirmButton","timer","catch","err"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAO,oCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,iBAA9C;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AACJa,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KADF;AAEJC,IAAAA;AAFI,MAGFd,UAAU,CAACK,WAAD,CAHd,CAHyB,CAQzB;;AAGA,WAASU,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,UAAMC,QAAQ,GAAGP,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAe,CAAhB,CAAtB;AAEA,QAAIC,SAAS,GAAG,CAAhB;;AAEA,QAAIF,QAAQ,KAAKG,SAAjB,EAA4B;AAC1BD,MAAAA,SAAS,GAAGF,QAAQ,CAACI,EAAT,GAAc,CAA1B;AACD;;AAEDV,IAAAA,QAAQ,CAAED,KAAD,IAAW,CAClB,GAAGA,KADe,EAElB;AACEW,MAAAA,EAAE,EAAEF,SADN;AAEEG,MAAAA,KAAK,EAAE,EAFT;AAGEN,MAAAA,MAAM,EAAEA;AAHV,KAFkB,CAAZ,CAAR;AAQD;;AAED,WAASO,OAAT,CAAiBC,SAAjB,EAA4B;AAC1B,QAAIC,aAAa,GAAGf,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAU;AACzC,aAAOA,IAAI,CAACN,EAAL,KAAYG,SAAS,CAACH,EAA7B;AACD,KAFmB,CAApB;AAIA,QAAIO,WAAW,GAAG,CAAC,GAAGH,aAAJ,EAAmBD,SAAnB,CAAlB;AACA,QAAIK,MAAM,GAAG,CAACL,SAAD,CAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAN,CAAUP,KAAtB;;AACA,QAAIO,MAAM,CAAC,CAAD,CAAN,CAAUb,MAAV,IAAoB,WAAxB,EAAqC;AACnCc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA7B,MAAAA,KAAK,CAAC8B,IAAN,CAAW,mCAAX,EAAgD;AAC9CC,QAAAA,MAAM,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUP,KAD4B;AAE9CY,QAAAA,MAAM,EAAE;AAAErB,UAAAA;AAAF,SAFsC;AAG9CsB,QAAAA,KAAK,EAAE;AAHuC,OAAhD,EAKGC,IALH,CAKQ,MAAM;AACVhC,QAAAA,IAAI,CAACiC,IAAL,CAAU;AACRC,UAAAA,QAAQ,EAAE,SADF;AAERC,UAAAA,IAAI,EAAE,SAFE;AAGRjB,UAAAA,KAAK,EAAE,0BAHC;AAIRkB,UAAAA,iBAAiB,EAAE,KAJX;AAKRC,UAAAA,KAAK,EAAE;AALC,SAAV;AAOD,OAbH,EAcGC,KAdH,CAcSC,GAAG,IAAI;AACZvC,QAAAA,IAAI,CAACiC,IAAL,CAAU,OAAV,EAAmB,uCAAnB,EAA4D,OAA5D;AACD,OAhBH;AAiBD,KAnBD,MAmBO,CAEN;;AACD1B,IAAAA,QAAQ,CAACiB,WAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,SAAS,EAAC,KAA9B;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAAA,gCAIE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,EAAE,EAAC,IAAhB;AAAA,iCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,KAArB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAElB,KADT;AAEE,oBAAA,YAAY,EAAEK,YAFhB;AAGE,oBAAA,OAAO,EAAEQ,OAHX;AAIE,oBAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEb,KADT;AAEE,oBAAA,YAAY,EAAEK,YAFhB;AAGE,oBAAA,OAAO,EAAEQ,OAHX;AAIE,oBAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF,eAiBE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEb,KADT;AAEE,oBAAA,YAAY,EAAEK,YAFhB;AAGE,oBAAA,OAAO,EAAEQ,OAHX;AAIE,oBAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEb,KADT;AAEE,oBAAA,YAAY,EAAEK,YAFhB;AAGE,oBAAA,OAAO,EAAEQ,OAHX;AAIE,oBAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAK,kBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,wBATF,eAYE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEb,KADT;AAEE,oBAAA,YAAY,EAAEK,YAFhB;AAGE,oBAAA,OAAO,EAAEQ,OAHX;AAIE,oBAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqED,CApIM;;GAAMd,K;;KAAAA,K","sourcesContent":["import { useState, useContext } from \"react\";\nimport StatusLine from \"../task/StatusLine\";\nimport '../../styles/Components/equip.scss'\nimport Axios from \"axios\";\nimport validator from 'validator'\nimport Swal from 'sweetalert2'\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport { Card, FormControl, InputGroup } from \"react-bootstrap\"\n\nexport const Equip = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const {\n    user: { nameproy },\n    dispatch\n  } = useContext(AuthContext)\n\n  //const nom = {nameproy}\n\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n\n    let newTaskId = 1;\n\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        status: status\n      }\n    ]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n\n    let newTaskList = [...filteredTasks, taskToAdd];\n    let prueba = [taskToAdd];\n    console.log(prueba[0].title);\n    if (prueba[0].status == 'Programer') {\n      console.log('Axios')\n      Axios.post(\"http://localhost:9000/equipo/add/\", {\n        Correo: prueba[0].title,\n        Nombre: { nameproy },\n        Cargo: 2\n      })\n        .then(() => {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Your work has been saved',\n            showConfirmButton: false,\n            timer: 1000\n          })\n        })\n        .catch(err => {\n          Swal.fire('Error', 'Usuario existente o datos incorrectos', 'error')\n        })\n    } else {\n\n    }\n    setTasks(newTaskList);\n  }\n\n  return (\n    <div className=\"App\">\n      <div align=\"center\" className=\"p-5\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n        >\n          <Card.Header as=\"h5\"><h1>Task Management</h1></Card.Header>\n          <Card.Body>\n            <Card.Text className=\"p-4\">\n              <div className=\"mb-5\">\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                    <StatusLine\n                      tasks={tasks}\n                      addEmptyTask={addEmptyTask}\n                      addTask={addTask}\n                      status=\"Programer\"\n                    />\n                  </div>\n                  <div className=\"col-4\">\n                    <StatusLine\n                      tasks={tasks}\n                      addEmptyTask={addEmptyTask}\n                      addTask={addTask}\n                      status=\"Designers\"\n                    />\n                  </div>\n                  <div className=\"col-4\">\n                    <StatusLine\n                      tasks={tasks}\n                      addEmptyTask={addEmptyTask}\n                      addTask={addTask}\n                      status=\"Analist\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                    <StatusLine\n                      tasks={tasks}\n                      addEmptyTask={addEmptyTask}\n                      addTask={addTask}\n                      status=\"Boss\"\n                    />\n                  </div>\n                  <div className=\"col-4\">\n\n                  </div>\n                  <div className=\"col-4\">\n                    <StatusLine\n                      tasks={tasks}\n                      addEmptyTask={addEmptyTask}\n                      addTask={addTask}\n                      status=\"Tester\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n\n    </div>\n\n\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}